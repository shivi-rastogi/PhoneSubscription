//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubscriptionApi.SubscriptionService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetails", Namespace="http://schemas.datacontract.org/2004/07/SubscriptionService.DataContract")]
    [System.SerializableAttribute()]
    public partial class UserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SubscriptionApi.SubscriptionService.SubscriptionDetails[] SubscriptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SubscriptionApi.SubscriptionService.SubscriptionDetails[] Subscriptions {
            get {
                return this.SubscriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionsField, value) != true)) {
                    this.SubscriptionsField = value;
                    this.RaisePropertyChanged("Subscriptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionDetails", Namespace="http://schemas.datacontract.org/2004/07/SubscriptionService.DataContract")]
    [System.SerializableAttribute()]
    public partial class SubscriptionDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CallMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriptionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VatAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CallMinutes {
            get {
                return this.CallMinutesField;
            }
            set {
                if ((this.CallMinutesField.Equals(value) != true)) {
                    this.CallMinutesField = value;
                    this.RaisePropertyChanged("CallMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriptionId {
            get {
                return this.SubscriptionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionIdField, value) != true)) {
                    this.SubscriptionIdField = value;
                    this.RaisePropertyChanged("SubscriptionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VatAmount {
            get {
                return this.VatAmountField;
            }
            set {
                if ((this.VatAmountField.Equals(value) != true)) {
                    this.VatAmountField = value;
                    this.RaisePropertyChanged("VatAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SubscriptionService.ISubscriptionService")]
    public interface ISubscriptionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetUsersData", ReplyAction="http://tempuri.org/ISubscriptionService/GetUsersDataResponse")]
        SubscriptionApi.SubscriptionService.UserDetails[] GetUsersData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetUsersData", ReplyAction="http://tempuri.org/ISubscriptionService/GetUsersDataResponse")]
        System.Threading.Tasks.Task<SubscriptionApi.SubscriptionService.UserDetails[]> GetUsersDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetUserData", ReplyAction="http://tempuri.org/ISubscriptionService/GetUserDataResponse")]
        SubscriptionApi.SubscriptionService.UserDetails GetUserData(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetUserData", ReplyAction="http://tempuri.org/ISubscriptionService/GetUserDataResponse")]
        System.Threading.Tasks.Task<SubscriptionApi.SubscriptionService.UserDetails> GetUserDataAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/AddUser", ReplyAction="http://tempuri.org/ISubscriptionService/AddUserResponse")]
        bool AddUser(SubscriptionApi.SubscriptionService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/AddUser", ReplyAction="http://tempuri.org/ISubscriptionService/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(SubscriptionApi.SubscriptionService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/UpdateUser", ReplyAction="http://tempuri.org/ISubscriptionService/UpdateUserResponse")]
        bool UpdateUser(SubscriptionApi.SubscriptionService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/UpdateUser", ReplyAction="http://tempuri.org/ISubscriptionService/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(SubscriptionApi.SubscriptionService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/DeleteUser", ReplyAction="http://tempuri.org/ISubscriptionService/DeleteUserResponse")]
        bool DeleteUser(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/DeleteUser", ReplyAction="http://tempuri.org/ISubscriptionService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetSubscriptionsData", ReplyAction="http://tempuri.org/ISubscriptionService/GetSubscriptionsDataResponse")]
        SubscriptionApi.SubscriptionService.SubscriptionDetails[] GetSubscriptionsData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetSubscriptionsData", ReplyAction="http://tempuri.org/ISubscriptionService/GetSubscriptionsDataResponse")]
        System.Threading.Tasks.Task<SubscriptionApi.SubscriptionService.SubscriptionDetails[]> GetSubscriptionsDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetSubscriptionData", ReplyAction="http://tempuri.org/ISubscriptionService/GetSubscriptionDataResponse")]
        SubscriptionApi.SubscriptionService.SubscriptionDetails GetSubscriptionData(string SubscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetSubscriptionData", ReplyAction="http://tempuri.org/ISubscriptionService/GetSubscriptionDataResponse")]
        System.Threading.Tasks.Task<SubscriptionApi.SubscriptionService.SubscriptionDetails> GetSubscriptionDataAsync(string SubscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/AddSubscription", ReplyAction="http://tempuri.org/ISubscriptionService/AddSubscriptionResponse")]
        bool AddSubscription(SubscriptionApi.SubscriptionService.SubscriptionDetails subDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/AddSubscription", ReplyAction="http://tempuri.org/ISubscriptionService/AddSubscriptionResponse")]
        System.Threading.Tasks.Task<bool> AddSubscriptionAsync(SubscriptionApi.SubscriptionService.SubscriptionDetails subDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/UpdateSubscription", ReplyAction="http://tempuri.org/ISubscriptionService/UpdateSubscriptionResponse")]
        bool UpdateSubscription(SubscriptionApi.SubscriptionService.SubscriptionDetails subDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/UpdateSubscription", ReplyAction="http://tempuri.org/ISubscriptionService/UpdateSubscriptionResponse")]
        System.Threading.Tasks.Task<bool> UpdateSubscriptionAsync(SubscriptionApi.SubscriptionService.SubscriptionDetails subDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/DeleteSubscription", ReplyAction="http://tempuri.org/ISubscriptionService/DeleteSubscriptionResponse")]
        bool DeleteSubscription(string SubscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/DeleteSubscription", ReplyAction="http://tempuri.org/ISubscriptionService/DeleteSubscriptionResponse")]
        System.Threading.Tasks.Task<bool> DeleteSubscriptionAsync(string SubscriptionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubscriptionServiceChannel : SubscriptionApi.SubscriptionService.ISubscriptionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubscriptionServiceClient : System.ServiceModel.ClientBase<SubscriptionApi.SubscriptionService.ISubscriptionService>, SubscriptionApi.SubscriptionService.ISubscriptionService {
        
        public SubscriptionServiceClient() {
        }
        
        public SubscriptionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SubscriptionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriptionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriptionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SubscriptionApi.SubscriptionService.UserDetails[] GetUsersData() {
            return base.Channel.GetUsersData();
        }
        
        public System.Threading.Tasks.Task<SubscriptionApi.SubscriptionService.UserDetails[]> GetUsersDataAsync() {
            return base.Channel.GetUsersDataAsync();
        }
        
        public SubscriptionApi.SubscriptionService.UserDetails GetUserData(int Id) {
            return base.Channel.GetUserData(Id);
        }
        
        public System.Threading.Tasks.Task<SubscriptionApi.SubscriptionService.UserDetails> GetUserDataAsync(int Id) {
            return base.Channel.GetUserDataAsync(Id);
        }
        
        public bool AddUser(SubscriptionApi.SubscriptionService.UserDetails user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(SubscriptionApi.SubscriptionService.UserDetails user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public bool UpdateUser(SubscriptionApi.SubscriptionService.UserDetails user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(SubscriptionApi.SubscriptionService.UserDetails user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public bool DeleteUser(int Id) {
            return base.Channel.DeleteUser(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int Id) {
            return base.Channel.DeleteUserAsync(Id);
        }
        
        public SubscriptionApi.SubscriptionService.SubscriptionDetails[] GetSubscriptionsData() {
            return base.Channel.GetSubscriptionsData();
        }
        
        public System.Threading.Tasks.Task<SubscriptionApi.SubscriptionService.SubscriptionDetails[]> GetSubscriptionsDataAsync() {
            return base.Channel.GetSubscriptionsDataAsync();
        }
        
        public SubscriptionApi.SubscriptionService.SubscriptionDetails GetSubscriptionData(string SubscriptionId) {
            return base.Channel.GetSubscriptionData(SubscriptionId);
        }
        
        public System.Threading.Tasks.Task<SubscriptionApi.SubscriptionService.SubscriptionDetails> GetSubscriptionDataAsync(string SubscriptionId) {
            return base.Channel.GetSubscriptionDataAsync(SubscriptionId);
        }
        
        public bool AddSubscription(SubscriptionApi.SubscriptionService.SubscriptionDetails subDetails) {
            return base.Channel.AddSubscription(subDetails);
        }
        
        public System.Threading.Tasks.Task<bool> AddSubscriptionAsync(SubscriptionApi.SubscriptionService.SubscriptionDetails subDetails) {
            return base.Channel.AddSubscriptionAsync(subDetails);
        }
        
        public bool UpdateSubscription(SubscriptionApi.SubscriptionService.SubscriptionDetails subDetails) {
            return base.Channel.UpdateSubscription(subDetails);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSubscriptionAsync(SubscriptionApi.SubscriptionService.SubscriptionDetails subDetails) {
            return base.Channel.UpdateSubscriptionAsync(subDetails);
        }
        
        public bool DeleteSubscription(string SubscriptionId) {
            return base.Channel.DeleteSubscription(SubscriptionId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSubscriptionAsync(string SubscriptionId) {
            return base.Channel.DeleteSubscriptionAsync(SubscriptionId);
        }
    }
}
